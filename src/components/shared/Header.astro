---
import CenteredLayout from '@components/shared/CenteredLayout.astro'
import PageRoutes from '@data/route'
import { navigation } from '@data/header'
import Burger from './icons/Burger.astro';
import Caret from './icons/Caret.astro';

const currentPath = Astro.url.pathname
---

<script>
	const content = document.getElementById('content')

	document.addEventListener('click', (e: any) => {
		if (e.target.id !== 'content') {
			content!.classList.add('hidden')
		}
	})
</script>

<CenteredLayout as="header">
	<nav class="flex h-20 items-center justify-between">
		<a href={PageRoutes.HOME}>
			<img src="/images/logo.png" loading="lazy" alt="Koshish Family logo" class="w-12 lg:w-16" />
		</a>
        
<div class="hidden h-full space-x-8 md:flex">
	{
		navigation.map((navigation) => {
			const { label, href, items } = navigation

			if(items && items.length > 0) {
				return( 
				<div class="group relative flex h-full cursor-pointer items-center space-x-2 font-jost capitalize lg:text-xl">
						<span
							class={`line-effect`}
						>
							{label}
						</span>
						<Caret width={18} height={18} class="text-black transition ease-in group-hover:rotate-180" />
						<div class="absolute top-full left-0 z-10 hidden min-w-max space-y-2 rounded-b-lg bg-white p-4 shadow-light group-hover:block">
							{items.map((link) => {
								return (
									<a
										href={link.href}
										class={`flex w-full items-center rounded-md p-2 text-sm text-grey-400 hover:bg-secondary-light hover:text-secondary lg:text-base  ${
											currentPath === link.href || currentPath === link.href + '/' ? 'active' : ''
										}`}
										target={
											'_blank'
												
										}
									>
										{link.label}
									</a>
								)
							})}
						</div>
				</div>
					)
			}else
				return (
					<a class=" group flex h-full items-center font-jost capitalize lg:text-xl" href={href}>
						<span
							class={`line-effect ${
								currentPath === href || currentPath === href + '/' ? 'page-active' : ''
							}`}
						>
							{label}
						</span>
					</a>
				)
		}
		)
	}
</div>
		


<div id="headerMenu" class="group relative flex h-full items-center md:hidden">
	<button
		aria-label="toggle"
		id="toggle"
		class="rounded-full p-2 text-primary group-hover:bg-primary group-hover:text-white"
	>
		<Burger width={24} height={24} />
	</button>

	<div
		id="content"
		class="absolute right-5 top-16 z-10 hidden w-full min-w-max divide-y rounded-lg bg-white p-4 shadow-light group-hover:block"
	>
		{
			navigation.map((navigation) => {
				const { label, href, items } = navigation

				if(items && items.length > 0) {
					return (
						<div>
						<span class="block w-full px-5 pt-4 pb-2 font-semibold capitalize pointer-events-none">
							{label}	
						</span>
						{
							items.map((item)=>{
								return (
									<a class="block w-full px-5 pt-4 pb-2 text-gray-500 font-semibold capitalize" href={item.href}>
										{item.label}
									</a>
								) 
							})
						}
						</div>
					)
					


				}else{

					return (
						<a class="block w-full px-5 pt-4 pb-2 font-semibold capitalize" href={href}>
							{label}
						</a>
					)
				}

				}
			)
		}
	</div>
</div>
	</nav>
</CenteredLayout>